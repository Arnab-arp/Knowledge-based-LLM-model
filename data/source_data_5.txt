Is GraphQL still a good choice for building new SaaS?
Graphql generally lets you move faster because it has abstractions for common things you need to implement yourself in rest, like returning relations or optionally returning more or less data server-side caching in graphql isn't as simple as rest, but it's possible there are more foot guns with graphql, like N+1 queries or really large custom queries, but these are usually solvable. N+1 queries are solved using some kind of dataloader-like solution that batches things. large custom queries can be gated by checking complexity: https://docs.nestjs.com/graphql/complexity things like code generation and observability are good for both so pretty much a wash i think rest can lead to more complex code or less performant clients when it has to make several rest requests in serial and stitch the results together when a single graphql request that fetches relations could do it in one round trip personally i like it and would use it in future projects. it often simplifies frontend code a bit because you don't need to hit several rest apis to stitch together data, you can often make one request. the less trivial server side caching is a bummer but it exists: https://www.apollographql.com/docs/apollo-server/performance/caching/ 